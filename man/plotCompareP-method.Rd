% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fitMixedModelDE.R
\docType{methods}
\name{plotCompareP}
\alias{plotCompareP}
\title{Convert t-statistics to standard degrees of freedom}
\usage{
plotCompareP(p1, p2, vpDonor, dupcorvalue, fraction = 0.2,
  xlabel = bquote(duplicateCorrelation ~ (-log[10] ~ p)),
  ylabel = bquote(dream ~ (-log[10] ~ p)))
}
\arguments{
\item{p1}{p-value from first analysis}

\item{p2}{p-value from second analysis}

\item{vpDonor}{donor component for each gene from variancePartition analysis}

\item{dupcorvalue}{scalar donor component from duplicateCorrelation}

\item{fraction}{fraction of highest/lowest values to use for best fit lines}

\item{xlabel}{for x-axis}

\item{ylabel}{label for y-axis}

\item{fit}{fit from dream}

\item{coef}{coef passed to topTable}

\item{number}{number passed to TopTable}
}
\value{
ggplot2 plot
}
\description{
Convert t-statistics with differing degrees of freedom (df) to standard degrees of freedom.
}
\examples{
# load library
# library(variancePartition)
library(BiocParallel)

# load simulated data:
# geneExpr: matrix of gene expression values
# info: information/metadata about each sample
data(varPartData)

form <- ~ Batch + (1|Individual) + (1|Tissue) 

# Fit linear mixed model for each gene
# run on just 10 genes for time
fit = dream( geneExpr[1:10,], form, info)

topTable_stdt(fit, "Batch2")


# load library
# library(variancePartition)

# optional step to run analysis in parallel on multicore machines
# Here, we used 4 threads
library(doParallel)
cl <- makeCluster(4)
registerDoParallel(cl)
# or by using the doSNOW package

# load simulated data:
# geneExpr: matrix of gene expression values
# info: information/metadata about each sample
data(varPartData)

# Perform very simple analysis for demonstration

# Analysis 1
form <- ~ Batch 
fit = dream( geneExpr, form, info)
fit = eBayes( fit )
res = topTable( fit, number=Inf, coef="Batch3" )

# Analysis 2
form <- ~ Batch + (1|Tissue)
fit2 = dream( geneExpr, form, info)
res2 = topTable( fit2, number=Inf, coef="Batch3" )

# Compare p-values
plotCompareP( res$P.Value, res2$P.Value, runif(nrow(res)), .3 )


}
